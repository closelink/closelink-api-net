/* 
 * Closelink API
 *
 * This is the documentation of the public Closelink API. For now it contains all routes to manage Stocks and Schedules for specific vessels.
 *
 * OpenAPI spec version: v1
 * Contact: service@closelink.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CloselinkAPI.Client;
using CloselinkAPI.Api;
using CloselinkAPI.Model;

namespace CloselinkAPI.Test
{
    /// <summary>
    ///  Class for testing ScheduleApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ScheduleApiTests
    {
        private ScheduleApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ScheduleApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ScheduleApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ScheduleApi
            //Assert.IsInstanceOfType(typeof(ScheduleApi), instance, "instance is a ScheduleApi");
        }

        
        /// <summary>
        /// Test Create
        /// </summary>
        [Test]
        public void CreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Schedule> body = null;
            //var response = instance.Create(body);
            //Assert.IsInstanceOf<List<Schedule>> (response, "response is List<Schedule>");
        }
        
        /// <summary>
        /// Test Get
        /// </summary>
        [Test]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scheduleId = null;
            //var response = instance.Get(scheduleId);
            //Assert.IsInstanceOf<Schedule> (response, "response is Schedule");
        }
        
        /// <summary>
        /// Test GetList
        /// </summary>
        [Test]
        public void GetListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //string imo = null;
            //DateTime? etaFrom = null;
            //DateTime? etaTo = null;
            //var response = instance.GetList(page, imo, etaFrom, etaTo);
            //Assert.IsInstanceOf<List<Schedule>> (response, "response is List<Schedule>");
        }
        
        /// <summary>
        /// Test GetPage
        /// </summary>
        [Test]
        public void GetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //string imo = null;
            //DateTime? etaFrom = null;
            //DateTime? etaTo = null;
            //var response = instance.GetPage(page, imo, etaFrom, etaTo);
            //Assert.IsInstanceOf<Page> (response, "response is Page");
        }
        
        /// <summary>
        /// Test Update
        /// </summary>
        [Test]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Schedule> body = null;
            //var response = instance.Update(body);
            //Assert.IsInstanceOf<List<Schedule>> (response, "response is List<Schedule>");
        }
        
    }

}
